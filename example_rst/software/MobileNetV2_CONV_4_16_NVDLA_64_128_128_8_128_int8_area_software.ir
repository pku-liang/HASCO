[produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 3) {
    for (k.outer.init, 0, 8) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*131424) + (k.outer.init*4)), 394272, 2), 1, 7, 1, 1, 0, 1, 12, 1)
    }
  }
  for (y.outer, 0, 3) {
    for (k.outer, 0, 8) {
      tensorized_CONV(tvm_access_ptr(type_annotation(), A, (y.outer*24864), 150528, 1), tvm_access_ptr(type_annotation(), B, (k.outer*4), 864, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*131424) + (k.outer*4)), 394272, 3), 1, 1, 3, 7, 1, 1, 1, 1, 0, 11, 1, 12, 1, 0, 0, (bool)1, (bool)0)
    }
  }
  for (y.outer.init, 0, 3) {
    for (k.outer.init, 0, 8) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*131424) + (k.outer.init*4)), 394272, 3), 1, 7, 1, 1, 0, 1, 12, 1)
    }
  }
}
, produce C {
  for (x.outer.init, 0, 5) {
    for (k.outer.init, 0, 8) {
      init_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*704) + (k.outer.init*4)), 387200, 2), 1, 2, 1, 1, 0, 10, 12, 1)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (s.outer, 0, 3) {
    for (c.outer, 0, 8) {
      for (x.outer, 0, 5) {
        for (k.outer, 0, 8) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((x.outer*704) + (s.outer*32)) + (c.outer*4)), 401408, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*128) + (s.outer*32)) + (k.outer*4)), 384, 1), tvm_access_ptr(type_annotation(), C, ((x.outer*704) + (k.outer*4)), 387200, 3), 1, 1, 7, 2, 1, 1, 2, 1, 0, 2, 10, 12, 1, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (x.outer.init, 0, 5) {
    for (k.outer.init, 0, 8) {
      store_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*704) + (k.outer.init*4)), 387200, 3), 1, 2, 1, 1, 0, 10, 12, 1)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (x.outer, 0, 56) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer*28672) + (x.outer*32)), 200704, 2), 1, 1, 1, 1, 0, 14, 0, 3)
      for (c.outer, 0, 8) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*57344) + (x.outer*64)) + (c.outer*4)), 401408, 1), tvm_access_ptr(type_annotation(), B, (c.outer*64), 256, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*28672) + (x.outer*32)), 200704, 3), 1, 1, 1, 1, 1, 1, 2, 1, 0, 0, 14, 0, 3, 2, 2, (bool)1, (bool)0)
      }
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer*28672) + (x.outer*32)), 200704, 3), 1, 1, 1, 1, 0, 14, 0, 3)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 56) {
    for (x.outer.init, 0, 56) {
      for (k.outer.init, 0, 32) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*21504) + (x.outer.init*192)) + (k.outer.init*3)), 1204224, 2), 1, 1, 1, 4, 0, 14, 13, 0)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 56) {
    for (x.outer, 0, 56) {
      for (k.outer, 0, 32) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*3584) + (x.outer*32)), 200704, 1), tvm_access_ptr(type_annotation(), B, (k.outer*3), 1536, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*21504) + (x.outer*192)) + (k.outer*3)), 1204224, 3), 1, 1, 1, 1, 1, 4, 1, 1, 0, 14, 14, 13, 0, 2, 2, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 56) {
    for (x.outer.init, 0, 56) {
      for (k.outer.init, 0, 32) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*21504) + (x.outer.init*192)) + (k.outer.init*3)), 1204224, 3), 1, 1, 1, 4, 0, 14, 13, 0)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 8) {
      for (k.outer.init, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*150528) + (x.outer.init*672)) + (k.outer.init*24)), 301056, 2), 1, 1, 2, 1, 0, 9, 8, 1)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (r.outer, 0, 3) {
    for (c.outer, 0, 6) {
      for (y.outer, 0, 2) {
        for (x.outer, 0, 8) {
          for (k.outer, 0, 4) {
            tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((((y.outer*303744) + (r.outer*10848)) + (x.outer*672)) + (c.outer*16)), 1225824, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*1536) + (r.outer*288)) + (k.outer*24)), 4608, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*150528) + (x.outer*672)) + (k.outer*24)), 301056, 3), 1, 1, 2, 1, 2, 1, 6, 1, 0, 4, 9, 8, 1, 2, 2, (bool)1, (bool)0)
          }
        }
      }
    }
  }
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 8) {
      for (k.outer.init, 0, 4) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*150528) + (x.outer.init*672)) + (k.outer.init*24)), 301056, 3), 1, 1, 2, 1, 0, 9, 8, 1)
      }
    }
  }
}
, produce C {
  for (x.outer.init, 0, 4) {
    for (k.outer.init, 0, 12) {
      init_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*336) + (k.outer.init*2)), 75264, 2), 1, 1, 1, 8, 0, 2, 14, 0)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 3) {
    for (x.outer, 0, 4) {
      for (k.outer, 0, 12) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((x.outer*1344) + (c.outer*32)), 301056, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*768) + (k.outer*2)), 2304, 1), tvm_access_ptr(type_annotation(), C, ((x.outer*336) + (k.outer*2)), 75264, 3), 1, 1, 4, 1, 1, 8, 1, 1, 0, 8, 2, 14, 0, 2, 2, (bool)1, (bool)0)
      }
    }
  }
  for (x.outer.init, 0, 4) {
    for (k.outer.init, 0, 12) {
      store_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*336) + (k.outer.init*2)), 75264, 3), 1, 1, 1, 8, 0, 2, 14, 0)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 4) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 6) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*112896) + (x.outer.init*4032)) + (k.outer.init*24)), 451584, 2), 1, 2, 2, 1, 0, 4, 8, 3)
      }
    }
    for (x.outer, 0, 2) {
      for (k.outer, 0, 6) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*18816) + (x.outer*672)), 75264, 1), tvm_access_ptr(type_annotation(), B, (k.outer*24), 82944, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*112896) + (x.outer*4032)) + (k.outer*24)), 451584, 3), 1, 1, 1, 2, 2, 1, 8, 1, 0, 2, 4, 8, 3, 0, 2, (bool)1, (bool)0)
      }
    }
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 6) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*112896) + (x.outer.init*4032)) + (k.outer.init*24)), 451584, 3), 1, 2, 2, 1, 0, 4, 8, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 6) {
    for (x.outer.init, 0, 3) {
      for (k.outer.init, 0, 72) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*69984) + (x.outer.init*2592)) + (k.outer.init*2)), 419904, 2), 1, 2, 1, 1, 0, 14, 14, 2)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (r.outer, 0, 3) {
    for (s.outer, 0, 3) {
      for (c.outer, 0, 72) {
        for (y.outer, 0, 6) {
          for (x.outer, 0, 3) {
            for (k.outer, 0, 72) {
              tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((((y.outer*72576) + (r.outer*8064)) + (x.outer*2592)) + (s.outer*144)) + (c.outer*2)), 451584, 1), tvm_access_ptr(type_annotation(), B, ((((r.outer*432) + (c.outer*288)) + (s.outer*144)) + (k.outer*2)), 432, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*69984) + (x.outer*2592)) + (k.outer*2)), 419904, 3), 1, 1, 1, 2, 1, 1, 1, 1, 0, 7, 14, 14, 2, 2, 2, (bool)1, (bool)0)
            }
          }
        }
      }
    }
  }
  for (y.outer.init, 0, 6) {
    for (x.outer.init, 0, 3) {
      for (k.outer.init, 0, 72) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*69984) + (x.outer.init*2592)) + (k.outer.init*2)), 419904, 3), 1, 2, 1, 1, 0, 14, 14, 2)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 24) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*37632) + (x.outer.init*192)) + k.outer.init), 75264, 2), 1, 1, 1, 1, 0, 8, 15, 0)
      }
    }
  }
  for (y.outer, 0, 2) {
    for (x.outer, 0, 7) {
      for (c.outer, 0, 36) {
        for (k.outer, 0, 24) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*225792) + (x.outer*1152)) + (c.outer*4)), 451584, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*96) + k.outer), 3456, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*37632) + (x.outer*192)) + k.outer), 75264, 3), 1, 1, 2, 1, 1, 1, 1, 1, 0, 4, 8, 15, 0, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 24) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*37632) + (x.outer.init*192)) + k.outer.init), 75264, 3), 1, 1, 1, 1, 0, 8, 15, 0)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 28) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 72) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*16128) + (x.outer.init*4032)) + (k.outer.init*2)), 451584, 2), 1, 2, 1, 1, 0, 4, 14, 3)
      }
    }
    for (x.outer, 0, 2) {
      for (k.outer, 0, 72) {
        for (c.outer, 0, 4) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*2688) + (x.outer*672)) + (c.outer*6)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*864) + (k.outer*2)), 3456, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*16128) + (x.outer*4032)) + (k.outer*2)), 451584, 3), 1, 1, 1, 2, 1, 1, 1, 2, 0, 14, 4, 14, 3, 2, 0, (bool)1, (bool)0)
        }
      }
    }
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 72) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*16128) + (x.outer.init*4032)) + (k.outer.init*2)), 451584, 3), 1, 2, 1, 1, 0, 4, 14, 3)
      }
    }
  }
}
, produce C {
  for (k.outer.init, 0, 36) {
    init_output(tvm_access_ptr(type_annotation(), C, (k.outer.init*4), 112896, 2), 1, 2, 1, 1, 0, 4, 12, 3)
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (r.outer, 0, 3) {
    for (s.outer, 0, 3) {
      for (c.outer, 0, 18) {
        for (k.outer, 0, 36) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((r.outer*8208) + (s.outer*144)) + (c.outer*8)), 467856, 1), tvm_access_ptr(type_annotation(), B, ((((c.outer*1152) + (r.outer*432)) + (s.outer*144)) + (k.outer*4)), 3456, 1), tvm_access_ptr(type_annotation(), C, (k.outer*4), 112896, 3), 1, 1, 2, 2, 1, 1, 3, 1, 0, 4, 4, 12, 3, 1, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (k.outer.init, 0, 36) {
    store_output(tvm_access_ptr(type_annotation(), C, (k.outer.init*4), 112896, 3), 1, 2, 1, 1, 0, 4, 12, 3)
  }
}
, produce C {
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*1792) + (x.outer.init*64)) + (k.outer.init*8)), 25088, 2), 1, 1, 1, 1, 0, 14, 8, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 16) {
    for (y.outer, 0, 14) {
      for (x.outer, 0, 14) {
        for (k.outer, 0, 4) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*8064) + (x.outer*288)) + (c.outer*9)), 112896, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*288) + (k.outer*8)), 4608, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*1792) + (x.outer*64)) + (k.outer*8)), 25088, 3), 1, 1, 1, 1, 1, 1, 1, 3, 0, 14, 14, 8, 3, 2, 0, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 4) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*1792) + (x.outer.init*64)) + (k.outer.init*8)), 25088, 3), 1, 1, 1, 1, 0, 14, 8, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 28) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 3) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*5376) + (x.outer.init*768)) + (k.outer.init*64)), 150528, 2), 1, 1, 4, 1, 0, 12, 0, 3)
      }
    }
  }
  for (y.outer, 0, 28) {
    for (x.outer, 0, 7) {
      for (c.outer, 0, 4) {
        for (k.outer, 0, 3) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*896) + (x.outer*128)) + (c.outer*8)), 25088, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1536) + (k.outer*64)), 6144, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*5376) + (x.outer*768)) + (k.outer*64)), 150528, 3), 1, 1, 1, 1, 4, 1, 1, 3, 0, 15, 12, 0, 3, 2, 1, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 28) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 3) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*5376) + (x.outer.init*768)) + (k.outer.init*64)), 150528, 3), 1, 1, 4, 1, 0, 12, 0, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 2) {
    for (x.outer, 0, 26) {
      for (k.outer, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*64896) + (x.outer*192)) + (k.outer*48)), 129792, 2), 1, 1, 3, 1, 0, 15, 0, 3)
        for (r.outer, 0, 3) {
          for (s.outer, 0, 3) {
            for (c.outer, 0, 64) {
              tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((((y.outer*69888) + (r.outer*5376)) + (x.outer*192)) + (s.outer*192)) + (c.outer*3)), 150528, 1), tvm_access_ptr(type_annotation(), B, ((((r.outer*576) + (c.outer*576)) + (s.outer*192)) + (k.outer*48)), 576, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*64896) + (x.outer*192)) + (k.outer*48)), 129792, 3), 1, 1, 1, 1, 3, 1, 1, 1, 0, 3, 15, 0, 3, 2, 0, (bool)1, (bool)0)
            }
          }
        }
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*64896) + (x.outer*192)) + (k.outer*48)), 129792, 3), 1, 1, 3, 1, 0, 15, 0, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 28) {
      for (k.outer.init, 0, 2) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*12544) + (x.outer.init*32)) + (k.outer.init*16)), 25088, 2), 1, 1, 1, 1, 0, 15, 0, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 2) {
    for (c.outer, 0, 2) {
      for (x.outer, 0, 28) {
        for (k.outer, 0, 2) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*75264) + (x.outer*192)) + (c.outer*96)), 150528, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*3072) + (k.outer*16)), 6144, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*12544) + (x.outer*32)) + (k.outer*16)), 25088, 3), 1, 1, 1, 1, 1, 1, 1, 32, 0, 2, 15, 0, 3, 2, 0, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 28) {
      for (k.outer.init, 0, 2) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*12544) + (x.outer.init*32)) + (k.outer.init*16)), 25088, 3), 1, 1, 1, 1, 0, 15, 0, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (x.outer.init, 0, 2) {
    for (k.outer.init, 0, 12) {
      init_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*2688) + (k.outer.init*16)), 150528, 2), 1, 1, 1, 1, 0, 2, 0, 3)
    }
  }
  for (x.outer, 0, 2) {
    for (c.outer, 0, 4) {
      for (k.outer, 0, 12) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((x.outer*448) + (c.outer*8)), 25088, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1536) + (k.outer*16)), 49152, 1), tvm_access_ptr(type_annotation(), C, ((x.outer*2688) + (k.outer*16)), 150528, 3), 1, 1, 2, 1, 1, 1, 3, 1, 0, 4, 2, 0, 3, 1, 2, (bool)1, (bool)0)
      }
    }
  }
  for (x.outer.init, 0, 2) {
    for (k.outer.init, 0, 12) {
      store_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*2688) + (k.outer.init*16)), 150528, 3), 1, 1, 1, 1, 0, 2, 0, 3)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 26) {
    for (x.outer.init, 0, 13) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4992) + (x.outer.init*384)), 384, 2), 1, 1, 12, 1, 0, 14, 0, 1)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (r.outer, 0, 3) {
    for (c.outer, 0, 12) {
      for (y.outer, 0, 26) {
        for (x.outer, 0, 13) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((((y.outer*5376) + (r.outer*5376)) + (x.outer*384)) + (c.outer*16)), 150528, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*3072) + (r.outer*576)), 9216, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*4992) + (x.outer*384)), 384, 3), 1, 1, 1, 1, 12, 1, 6, 1, 0, 15, 14, 0, 1, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 26) {
    for (x.outer.init, 0, 13) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4992) + (x.outer.init*384)), 384, 3), 1, 1, 12, 1, 0, 14, 0, 1)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 28) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 32) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*896) + (x.outer.init*64)) + k.outer.init), 25088, 2), 1, 1, 1, 1, 0, 14, 15, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 28) {
    for (x.outer, 0, 14) {
      for (k.outer, 0, 32) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*5376) + (x.outer*384)), 384, 1), tvm_access_ptr(type_annotation(), B, k.outer, 6144, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*64)) + k.outer), 25088, 3), 1, 1, 1, 1, 1, 1, 1, 64, 0, 15, 14, 15, 3, 2, 0, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 28) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 32) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*896) + (x.outer.init*64)) + k.outer.init), 25088, 3), 1, 1, 1, 1, 0, 14, 15, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 28) {
      for (k.outer.init, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*21504) + (x.outer.init*192)) + (k.outer.init*48)), 150528, 2), 1, 1, 3, 1, 0, 15, 0, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 4) {
    for (y.outer, 0, 7) {
      for (x.outer, 0, 28) {
        for (k.outer, 0, 4) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*3584) + (x.outer*32)) + (c.outer*8)), 25088, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1536) + (k.outer*48)), 6144, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*21504) + (x.outer*192)) + (k.outer*48)), 150528, 3), 1, 1, 1, 1, 3, 1, 1, 3, 0, 12, 15, 0, 3, 2, 1, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 28) {
      for (k.outer.init, 0, 4) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*21504) + (x.outer.init*192)) + (k.outer.init*48)), 150528, 3), 1, 1, 3, 1, 0, 15, 0, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 14) {
    for (k.outer.init, 0, 8) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*2688) + (k.outer.init*24)), 37632, 2), 1, 1, 2, 4, 0, 2, 8, 0)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (s.outer, 0, 3) {
    for (c.outer, 0, 12) {
      for (y.outer, 0, 14) {
        for (k.outer, 0, 8) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*5568) + (s.outer*192)) + (c.outer*16)), 161472, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*3072) + (s.outer*192)) + (k.outer*24)), 1728, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*2688) + (k.outer*24)), 37632, 3), 1, 1, 1, 1, 2, 4, 1, 1, 0, 15, 2, 8, 0, 0, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 14) {
    for (k.outer.init, 0, 8) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*2688) + (k.outer.init*24)), 37632, 3), 1, 1, 2, 4, 0, 2, 8, 0)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 14) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer.init*64)) + (k.outer.init*16)), 16, 2), 1, 1, 1, 48, 0, 15, 0, 0)
      }
    }
    for (x.outer, 0, 14) {
      for (k.outer, 0, 4) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*2688) + (x.outer*192)), 192, 1), tvm_access_ptr(type_annotation(), B, (k.outer*16), 12288, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*64)) + (k.outer*16)), 16, 3), 1, 1, 1, 1, 1, 48, 1, 1, 0, 15, 15, 0, 0, 2, 2, (bool)1, (bool)0)
      }
    }
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 4) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer.init*64)) + (k.outer.init*16)), 16, 3), 1, 1, 1, 48, 0, 15, 0, 0)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (x.outer.init, 0, 2) {
    for (k.outer.init, 0, 96) {
      init_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*2688) + (k.outer.init*4)), 75264, 2), 1, 1, 1, 1, 0, 9, 12, 3)
    }
  }
  for (x.outer, 0, 2) {
    for (c.outer, 0, 32) {
      for (k.outer, 0, 96) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((x.outer*448) + (c.outer*2)), 12544, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*768) + (k.outer*4)), 49152, 1), tvm_access_ptr(type_annotation(), C, ((x.outer*2688) + (k.outer*4)), 75264, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 9, 12, 3, 1, 2, (bool)1, (bool)0)
      }
    }
  }
  for (x.outer.init, 0, 2) {
    for (k.outer.init, 0, 96) {
      store_output(tvm_access_ptr(type_annotation(), C, ((x.outer.init*2688) + (k.outer.init*4)), 75264, 3), 1, 1, 1, 1, 0, 9, 12, 3)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 12) {
    for (x.outer, 0, 12) {
      for (k.outer.init, 0, 384) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*4608) + (x.outer*384)) + k.outer.init), 1, 2), 1, 1, 1, 1, 0, 15, 15, 1)
      }
      for (k.outer, 0, 384) {
        for (c.outer, 0, 12) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*5376) + (x.outer*384)) + (c.outer*32)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*12288) + k.outer), 36864, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*4608) + (x.outer*384)) + k.outer), 1, 3), 1, 1, 1, 1, 1, 1, 11, 1, 0, 15, 15, 15, 1, 1, 0, (bool)1, (bool)0)
        }
      }
      for (k.outer.init, 0, 384) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*4608) + (x.outer*384)) + k.outer.init), 1, 3), 1, 1, 1, 1, 0, 15, 15, 1)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 14) {
    for (x.outer, 0, 14) {
      for (k.outer, 0, 4) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*64)) + (k.outer*16)), 16, 2), 1, 1, 1, 1, 0, 15, 0, 3)
        for (c.outer, 0, 64) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*5376) + (x.outer*384)) + (c.outer*6)), 6, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*384) + (k.outer*16)), 147456, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*64)) + (k.outer*16)), 16, 3), 1, 1, 1, 1, 1, 1, 2, 1, 0, 15, 15, 0, 3, 0, 2, (bool)1, (bool)0)
        }
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*64)) + (k.outer*16)), 16, 3), 1, 1, 1, 1, 0, 15, 0, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 2) {
    for (k.outer.init, 0, 8) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*37632) + (k.outer.init*48)), 75264, 2), 1, 1, 3, 1, 0, 2, 0, 0)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 2) {
    for (c.outer, 0, 16) {
      for (k.outer, 0, 8) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*6272) + (c.outer*4)), 12544, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1536) + (k.outer*48)), 24576, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*37632) + (k.outer*48)), 75264, 3), 1, 1, 1, 1, 3, 1, 1, 1, 0, 9, 2, 0, 0, 2, 2, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 2) {
    for (k.outer.init, 0, 8) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*37632) + (k.outer.init*48)), 75264, 3), 1, 1, 3, 1, 0, 2, 0, 0)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 12) {
    for (k.outer.init, 0, 128) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4608) + (k.outer.init*3)), 55296, 2), 1, 1, 1, 1, 0, 4, 13, 1)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 64) {
    for (y.outer, 0, 12) {
      for (k.outer, 0, 128) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*5376) + (c.outer*6)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*2304) + (k.outer*3)), 3456, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*4608) + (k.outer*3)), 55296, 3), 1, 1, 1, 1, 1, 1, 1, 2, 0, 15, 4, 13, 1, 0, 0, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 12) {
    for (k.outer.init, 0, 128) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4608) + (k.outer.init*3)), 55296, 3), 1, 1, 1, 1, 0, 4, 13, 1)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 32) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*896) + (x.outer.init*128)) + (k.outer.init*2)), 12544, 2), 1, 1, 1, 1, 0, 14, 14, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 14) {
    for (c.outer, 0, 16) {
      for (x.outer, 0, 7) {
        for (k.outer, 0, 32) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*5376) + (x.outer*768)) + (c.outer*24)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1536) + (k.outer*2)), 589824, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*896) + (x.outer*128)) + (k.outer*2)), 12544, 3), 1, 1, 1, 1, 1, 1, 8, 1, 0, 15, 14, 14, 3, 0, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 32) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*896) + (x.outer.init*128)) + (k.outer.init*2)), 12544, 3), 1, 1, 1, 1, 0, 14, 14, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 128) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*10752) + (x.outer.init*2688)) + (k.outer.init*3)), 75264, 2), 1, 1, 1, 8, 0, 9, 13, 0)
      }
    }
    for (x.outer, 0, 2) {
      for (k.outer, 0, 128) {
        for (c.outer, 0, 2) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*1792) + (x.outer*448)) + (c.outer*32)), 12544, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*12288) + (k.outer*3)), 24576, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*10752) + (x.outer*2688)) + (k.outer*3)), 75264, 3), 1, 1, 1, 1, 1, 8, 1, 1, 0, 14, 9, 13, 0, 2, 2, (bool)1, (bool)0)
        }
      }
    }
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 128) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*10752) + (x.outer.init*2688)) + (k.outer.init*3)), 75264, 3), 1, 1, 1, 8, 0, 9, 13, 0)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 4) {
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 128) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*13824) + (x.outer.init*768)) + (k.outer.init*3)), 55296, 2), 1, 1, 1, 1, 0, 14, 13, 3)
      }
    }
    for (r.outer, 0, 3) {
      for (x.outer, 0, 6) {
        for (s.outer, 0, 3) {
          for (k.outer, 0, 128) {
            for (c.outer, 0, 2) {
              tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((((y.outer*16128) + (r.outer*5376)) + (x.outer*768)) + (s.outer*384)) + (c.outer*192)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((((c.outer*73728) + (r.outer*1152)) + (s.outer*384)) + (k.outer*3)), 221184, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*13824) + (x.outer*768)) + (k.outer*3)), 55296, 3), 1, 1, 1, 1, 1, 1, 64, 1, 0, 13, 14, 13, 3, 0, 2, (bool)1, (bool)0)
            }
          }
        }
      }
    }
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 128) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*13824) + (x.outer.init*768)) + (k.outer.init*3)), 55296, 3), 1, 1, 1, 1, 0, 14, 13, 3)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 8) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*6272) + (x.outer.init*64)) + (k.outer.init*8)), 12544, 2), 1, 1, 1, 1, 0, 15, 8, 1)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 128) {
    for (y.outer, 0, 2) {
      for (x.outer, 0, 14) {
        for (k.outer, 0, 8) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*37632) + (x.outer*384)) + (c.outer*3)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*192) + (k.outer*8)), 24576, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*6272) + (x.outer*64)) + (k.outer*8)), 12544, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 9, 15, 8, 1, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 2) {
    for (x.outer.init, 0, 14) {
      for (k.outer.init, 0, 8) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*6272) + (x.outer.init*64)) + (k.outer.init*8)), 12544, 3), 1, 1, 1, 1, 0, 15, 8, 1)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 64) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*5376) + (x.outer.init*2688)) + (k.outer.init*6)), 75264, 2), 1, 1, 1, 4, 0, 9, 10, 0)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 4) {
    for (y.outer, 0, 14) {
      for (x.outer, 0, 2) {
        for (k.outer, 0, 64) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*896) + (x.outer*448)) + (c.outer*16)), 12544, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*6144) + (k.outer*6)), 24576, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*5376) + (x.outer*2688)) + (k.outer*6)), 75264, 3), 1, 1, 1, 1, 1, 4, 1, 1, 0, 15, 9, 10, 0, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 14) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 64) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*5376) + (x.outer.init*2688)) + (k.outer.init*6)), 75264, 3), 1, 1, 1, 4, 0, 9, 10, 0)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 6) {
    for (k.outer.init, 0, 192) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*9216) + (k.outer.init*2)), 55296, 2), 1, 1, 1, 2, 0, 4, 14, 2)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 64) {
    for (y.outer, 0, 6) {
      for (k.outer, 0, 192) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*10752) + (c.outer*6)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*2304) + (k.outer*2)), 3456, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*9216) + (k.outer*2)), 55296, 3), 1, 1, 1, 1, 1, 2, 1, 1, 0, 14, 4, 14, 2, 0, 0, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 6) {
    for (k.outer.init, 0, 192) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*9216) + (k.outer.init*2)), 55296, 3), 1, 1, 1, 2, 0, 4, 14, 2)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 8) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*2688) + (x.outer.init*672)) + (k.outer.init*12)), 18816, 2), 1, 1, 1, 3, 0, 9, 4, 0)
      }
    }
  }
  for (y.outer, 0, 7) {
    for (x.outer, 0, 2) {
      for (c.outer, 0, 32) {
        for (k.outer, 0, 8) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*10752) + (x.outer*2688)) + (c.outer*12)), 75264, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1152) + (k.outer*12)), 36864, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*2688) + (x.outer*672)) + (k.outer*12)), 18816, 3), 1, 1, 1, 1, 1, 3, 1, 1, 0, 14, 9, 4, 0, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 8) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*2688) + (x.outer.init*672)) + (k.outer.init*12)), 18816, 3), 1, 1, 1, 3, 0, 9, 4, 0)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 14) {
    for (k.outer.init, 0, 4) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*8064) + (k.outer.init*144)), 112896, 2), 1, 1, 9, 1, 0, 2, 0, 3)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 3) {
    for (y.outer, 0, 14) {
      for (k.outer, 0, 4) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*1344) + (c.outer*32)), 18816, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*18432) + (k.outer*144)), 1769472, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*8064) + (k.outer*144)), 112896, 3), 1, 1, 1, 1, 9, 1, 11, 1, 0, 15, 2, 0, 3, 1, 2, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 14) {
    for (k.outer.init, 0, 4) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*8064) + (k.outer.init*144)), 112896, 3), 1, 1, 9, 1, 0, 2, 0, 3)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 12) {
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 192) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*6912) + (x.outer.init*1152)) + (k.outer.init*3)), 82944, 2), 1, 1, 1, 1, 0, 14, 13, 1)
      }
    }
  }
  for (y.outer, 0, 12) {
    for (s.outer, 0, 3) {
      for (x.outer, 0, 6) {
        for (c.outer, 0, 144) {
          for (k.outer, 0, 192) {
            tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((((y.outer*8064) + (x.outer*1152)) + (s.outer*576)) + (c.outer*4)), 112896, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*2304) + (s.outer*576)) + (k.outer*3)), 1728, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*6912) + (x.outer*1152)) + (k.outer*3)), 82944, 3), 1, 1, 1, 1, 1, 1, 1, 2, 0, 15, 14, 13, 1, 2, 2, (bool)1, (bool)0)
          }
        }
      }
    }
  }
  for (y.outer.init, 0, 12) {
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 192) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*6912) + (x.outer.init*1152)) + (k.outer.init*3)), 82944, 3), 1, 1, 1, 1, 0, 14, 13, 1)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 14) {
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 96) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*1344) + (x.outer.init*672)) + k.outer.init), 18816, 2), 1, 1, 1, 1, 0, 9, 15, 3)
      }
    }
    for (x.outer, 0, 2) {
      for (k.outer, 0, 96) {
        for (c.outer, 0, 16) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*8064) + (x.outer*4032)) + (c.outer*36)), 112896, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*3456) + k.outer), 55296, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*1344) + (x.outer*672)) + k.outer), 18816, 3), 1, 1, 1, 1, 1, 1, 1, 12, 0, 15, 9, 15, 3, 2, 0, (bool)1, (bool)0)
        }
      }
    }
    for (x.outer.init, 0, 2) {
      for (k.outer.init, 0, 96) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*1344) + (x.outer.init*672)) + k.outer.init), 18816, 3), 1, 1, 1, 1, 0, 9, 15, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 14) {
    for (x.outer, 0, 2) {
      for (k.outer, 0, 36) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*8064) + (x.outer*4032)) + (k.outer*16)), 112896, 2), 1, 1, 1, 2, 0, 9, 0, 2)
        for (c.outer, 0, 16) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*1344) + (x.outer*672)) + (c.outer*6)), 18816, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*3456) + (k.outer*16)), 55296, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*8064) + (x.outer*4032)) + (k.outer*16)), 112896, 3), 1, 1, 1, 1, 1, 2, 1, 1, 0, 15, 9, 0, 2, 2, 2, (bool)1, (bool)0)
        }
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*8064) + (x.outer*4032)) + (k.outer*16)), 112896, 3), 1, 1, 1, 2, 0, 9, 0, 2)
      }
    }
  }
}
, produce C {
  for (y.outer.init, 0, 3) {
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 32) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*27648) + (x.outer.init*1152)) + (k.outer.init*18)), 82944, 2), 1, 1, 2, 6, 0, 14, 14, 0)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (s.outer, 0, 3) {
    for (y.outer, 0, 3) {
      for (c.outer, 0, 24) {
        for (x.outer, 0, 6) {
          for (k.outer, 0, 32) {
            tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((((y.outer*32256) + (x.outer*1152)) + (s.outer*576)) + (c.outer*24)), 112896, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*13824) + (s.outer*576)) + (k.outer*18)), 1728, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*27648) + (x.outer*1152)) + (k.outer*18)), 82944, 3), 1, 1, 1, 1, 2, 6, 1, 1, 0, 12, 14, 14, 0, 2, 0, (bool)1, (bool)0)
          }
        }
      }
    }
  }
  for (y.outer.init, 0, 3) {
    for (x.outer.init, 0, 6) {
      for (k.outer.init, 0, 32) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*27648) + (x.outer.init*1152)) + (k.outer.init*18)), 82944, 3), 1, 1, 2, 6, 0, 14, 14, 0)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 96) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*2688) + (x.outer.init*192)) + k.outer.init), 18816, 2), 1, 1, 1, 1, 0, 14, 15, 3)
      }
    }
    for (x.outer, 0, 7) {
      for (k.outer, 0, 96) {
        for (c.outer, 0, 8) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*16128) + (x.outer*1152)) + (c.outer*72)), 112896, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*6912) + k.outer), 3981312, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*2688) + (x.outer*192)) + k.outer), 18816, 3), 1, 1, 1, 1, 1, 1, 24, 1, 0, 14, 14, 15, 3, 0, 2, (bool)1, (bool)0)
        }
      }
    }
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 96) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*2688) + (x.outer.init*192)) + k.outer.init), 18816, 3), 1, 1, 1, 1, 0, 14, 15, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 7) {
    init_output(tvm_access_ptr(type_annotation(), C, (y.outer.init*16128), 16128, 2), 1, 1, 36, 24, 0, 2, 0, 0)
  }
  for (y.outer, 0, 7) {
    tensorized_CONV(tvm_access_ptr(type_annotation(), A, (y.outer*2688), 2688, 1), tvm_access_ptr(type_annotation(), B, 0, 55296, 1), tvm_access_ptr(type_annotation(), C, (y.outer*16128), 16128, 3), 1, 1, 1, 1, 36, 24, 1, 1, 0, 14, 2, 0, 0, 2, 2, (bool)1, (bool)0)
  }
  for (y.outer.init, 0, 7) {
    store_output(tvm_access_ptr(type_annotation(), C, (y.outer.init*16128), 16128, 3), 1, 1, 36, 24, 0, 2, 0, 0)
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (k.outer, 0, 8) {
    init_output(tvm_access_ptr(type_annotation(), C, (k.outer*72), 28224, 2), 1, 1, 5, 2, 0, 9, 8, 2)
    for (r.outer, 0, 3) {
      for (s.outer, 0, 3) {
        for (c.outer, 0, 96) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((r.outer*8640) + (s.outer*576)) + (c.outer*6)), 129600, 1), tvm_access_ptr(type_annotation(), B, ((((c.outer*3456) + (r.outer*1728)) + (s.outer*576)) + (k.outer*72)), 1728, 1), tvm_access_ptr(type_annotation(), C, (k.outer*72), 28224, 3), 1, 1, 1, 1, 5, 2, 1, 1, 0, 9, 9, 8, 2, 2, 2, (bool)1, (bool)0)
        }
      }
    }
    store_output(tvm_access_ptr(type_annotation(), C, (k.outer*72), 28224, 3), 1, 1, 5, 2, 0, 9, 8, 2)
  }
}
, produce C {
  for (k.outer.init, 0, 160) {
    init_output(tvm_access_ptr(type_annotation(), C, k.outer.init, 7840, 2), 1, 1, 1, 1, 0, 9, 15, 3)
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 288) {
    for (k.outer, 0, 160) {
      tensorized_CONV(tvm_access_ptr(type_annotation(), A, (c.outer*2), 28224, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*320) + k.outer), 92160, 1), tvm_access_ptr(type_annotation(), C, k.outer, 7840, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 9, 9, 15, 3, 2, 1, (bool)1, (bool)0)
    }
  }
  for (k.outer.init, 0, 160) {
    store_output(tvm_access_ptr(type_annotation(), C, k.outer.init, 7840, 3), 1, 1, 1, 1, 0, 9, 15, 3)
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (k.outer, 0, 30) {
    init_output(tvm_access_ptr(type_annotation(), C, (k.outer*32), 47040, 2), 1, 1, 2, 1, 0, 9, 0, 3)
    for (c.outer, 0, 40) {
      tensorized_CONV(tvm_access_ptr(type_annotation(), A, (c.outer*4), 7840, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*3840) + (k.outer*32)), 153600, 1), tvm_access_ptr(type_annotation(), C, (k.outer*32), 47040, 3), 1, 1, 1, 1, 2, 1, 1, 2, 0, 9, 9, 0, 3, 2, 2, (bool)1, (bool)0)
    }
    store_output(tvm_access_ptr(type_annotation(), C, (k.outer*32), 47040, 3), 1, 1, 2, 1, 0, 9, 0, 3)
  }
}
, produce C {
  for (y.outer.init, 0, 5) {
    for (k.outer.init, 0, 192) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4800) + (k.outer.init*5)), 24000, 2), 1, 1, 1, 4, 0, 11, 11, 0)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (s.outer, 0, 3) {
    for (y.outer, 0, 5) {
      for (c.outer, 0, 60) {
        for (k.outer, 0, 192) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*6720) + (s.outer*960)) + (c.outer*16)), 47040, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*15360) + (s.outer*960)) + (k.outer*5)), 2880, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*4800) + (k.outer*5)), 24000, 3), 1, 1, 1, 1, 1, 4, 1, 1, 0, 15, 11, 11, 0, 2, 0, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 5) {
    for (k.outer.init, 0, 192) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*4800) + (k.outer.init*5)), 24000, 3), 1, 1, 1, 4, 0, 11, 11, 0)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 7) {
    for (k.outer.init, 0, 10) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*1120) + (k.outer.init*16)), 7840, 2), 1, 1, 1, 1, 0, 9, 0, 3)
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (c.outer, 0, 60) {
      for (k.outer, 0, 10) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*6720) + (c.outer*16)), 47040, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*2560) + (k.outer*16)), 2457600, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*1120) + (k.outer*16)), 7840, 3), 1, 1, 1, 1, 1, 1, 6, 1, 0, 15, 9, 0, 3, 2, 2, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 7) {
    for (k.outer.init, 0, 10) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*1120) + (k.outer.init*16)), 7840, 3), 1, 1, 1, 1, 0, 9, 0, 3)
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (k.outer, 0, 120) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer*6720) + (k.outer*8)), 47040, 2), 1, 1, 1, 1, 0, 9, 8, 2)
      for (c.outer, 0, 80) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*1120) + (c.outer*2)), 7840, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*1920) + (k.outer*8)), 153600, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*6720) + (k.outer*8)), 47040, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 15, 9, 8, 2, 2, 2, (bool)1, (bool)0)
      }
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer*6720) + (k.outer*8)), 47040, 3), 1, 1, 1, 1, 0, 9, 8, 2)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 5) {
    for (x.outer.init, 0, 5) {
      for (k.outer.init, 0, 64) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*4800) + (x.outer.init*960)) + (k.outer.init*15)), 15, 2), 1, 1, 1, 1, 0, 15, 1, 3)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (r.outer, 0, 3) {
    for (c.outer, 0, 320) {
      for (y.outer, 0, 5) {
        for (x.outer, 0, 5) {
          for (k.outer, 0, 64) {
            tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((((y.outer*6720) + (r.outer*6720)) + (x.outer*960)) + (c.outer*3)), 47040, 1), tvm_access_ptr(type_annotation(), B, (((r.outer*2880) + (c.outer*2880)) + (k.outer*15)), 8640, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*4800) + (x.outer*960)) + (k.outer*15)), 15, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 15, 15, 1, 3, 0, 0, (bool)1, (bool)0)
          }
        }
      }
    }
  }
  for (y.outer.init, 0, 5) {
    for (x.outer.init, 0, 5) {
      for (k.outer.init, 0, 64) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*4800) + (x.outer.init*960)) + (k.outer.init*15)), 15, 3), 1, 1, 1, 1, 0, 15, 1, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (x.outer, 0, 7) {
      for (k.outer.init, 0, 160) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*1120) + (x.outer*160)) + k.outer.init), 1, 2), 1, 1, 1, 1, 0, 15, 15, 3)
      }
      for (k.outer, 0, 160) {
        for (c.outer, 0, 3) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*6720) + (x.outer*960)) + (c.outer*320)), 320, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*51200) + k.outer), 49152000, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*1120) + (x.outer*160)) + k.outer), 1, 3), 1, 1, 1, 1, 1, 1, 107, 1, 0, 15, 15, 15, 3, 1, 2, (bool)1, (bool)0)
        }
      }
      for (k.outer.init, 0, 160) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*1120) + (x.outer*160)) + k.outer.init), 1, 3), 1, 1, 1, 1, 0, 15, 15, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer, 0, 7) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 320) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer*6720) + (x.outer.init*960)) + (k.outer.init*3)), 3, 2), 1, 1, 1, 2, 0, 15, 13, 3)
      }
    }
    for (x.outer, 0, 7) {
      for (k.outer, 0, 320) {
        for (c.outer, 0, 32) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*1120) + (x.outer*160)) + (c.outer*5)), 5, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*4800) + (k.outer*3)), 153600, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*6720) + (x.outer*960)) + (k.outer*3)), 3, 3), 1, 1, 1, 1, 1, 2, 1, 1, 0, 15, 15, 13, 3, 2, 2, (bool)1, (bool)0)
        }
      }
    }
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 320) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer*6720) + (x.outer.init*960)) + (k.outer.init*3)), 3, 3), 1, 1, 1, 2, 0, 15, 13, 3)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (k.outer.init, 0, 40) {
    init_output(tvm_access_ptr(type_annotation(), C, (k.outer.init*24), 24000, 2), 1, 1, 2, 2, 0, 11, 8, 0)
  }
  for (r.outer, 0, 3) {
    for (k.outer, 0, 40) {
      for (c.outer, 0, 120) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((r.outer*6720) + (c.outer*8)), 47040, 1), tvm_access_ptr(type_annotation(), B, (((c.outer*7680) + (r.outer*2880)) + (k.outer*24)), 2880, 1), tvm_access_ptr(type_annotation(), C, (k.outer*24), 24000, 3), 1, 1, 1, 1, 2, 2, 1, 1, 0, 11, 11, 8, 0, 2, 0, (bool)1, (bool)0)
      }
    }
  }
  for (k.outer.init, 0, 40) {
    store_output(tvm_access_ptr(type_annotation(), C, (k.outer.init*24), 24000, 3), 1, 1, 2, 2, 0, 11, 8, 0)
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 7) {
    for (k.outer.init, 0, 64) {
      init_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*2240) + (k.outer.init*5)), 15680, 2), 1, 1, 1, 1, 0, 9, 11, 3)
    }
  }
  for (y.outer, 0, 7) {
    for (c.outer, 0, 320) {
      for (k.outer, 0, 64) {
        tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*6720) + (c.outer*3)), 47040, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*960) + (k.outer*5)), 307200, 1), tvm_access_ptr(type_annotation(), C, ((y.outer*2240) + (k.outer*5)), 15680, 3), 1, 1, 1, 1, 1, 1, 1, 1, 0, 15, 9, 11, 3, 2, 0, (bool)1, (bool)0)
      }
    }
  }
  for (y.outer.init, 0, 7) {
    for (k.outer.init, 0, 64) {
      store_output(tvm_access_ptr(type_annotation(), C, ((y.outer.init*2240) + (k.outer.init*5)), 15680, 3), 1, 1, 1, 1, 0, 9, 11, 3)
    }
  }
}
, produce C {
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 20) {
        init_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*8960) + (x.outer.init*1280)) + (k.outer.init*64)), 64, 2), 1, 1, 4, 40, 0, 15, 0, 0)
      }
    }
  }
  // attr [iter_var(r.outer, )] pragma_epilogue = "do_fence"
  for (c.outer, 0, 2) {
    for (y.outer, 0, 7) {
      for (x.outer, 0, 7) {
        for (k.outer, 0, 20) {
          tensorized_CONV(tvm_access_ptr(type_annotation(), A, (((y.outer*2240) + (x.outer*320)) + (c.outer*160)), 160, 1), tvm_access_ptr(type_annotation(), B, ((c.outer*204800) + (k.outer*64)), 409600, 1), tvm_access_ptr(type_annotation(), C, (((y.outer*8960) + (x.outer*1280)) + (k.outer*64)), 64, 3), 1, 1, 1, 1, 4, 40, 1, 1, 0, 15, 15, 0, 0, 2, 2, (bool)1, (bool)0)
        }
      }
    }
  }
  for (y.outer.init, 0, 7) {
    for (x.outer.init, 0, 7) {
      for (k.outer.init, 0, 20) {
        store_output(tvm_access_ptr(type_annotation(), C, (((y.outer.init*8960) + (x.outer.init*1280)) + (k.outer.init*64)), 64, 3), 1, 1, 4, 40, 0, 15, 0, 0)
      }
    }
  }
}
, produce C {
  // attr [iter_var(n.outer, )] pragma_epilogue = "do_fence"
  for (y.outer.init, 0, 2) {
    init_output(tvm_access_ptr(type_annotation(), C, (y.outer.init*500), 500, 2), 1, 1, 1, 1, 0, 15, 15, 3)
  }
  for (y.outer, 0, 2) {
    for (c.outer, 0, 320) {
      tensorized_CONV(tvm_access_ptr(type_annotation(), A, ((y.outer*640000) + (c.outer*4)), 1280000, 1), tvm_access_ptr(type_annotation(), B, (c.outer*4), 16, 1), tvm_access_ptr(type_annotation(), C, (y.outer*500), 500, 3), 1, 1, 32, 1, 1, 1, 2, 1, 0, 12, 15, 15, 3, 2, 2, (bool)1, (bool)0)
    }
  }
  for (y.outer.init, 0, 2) {
    store_output(tvm_access_ptr(type_annotation(), C, (y.outer.init*500), 500, 3), 1, 1, 1, 1, 0, 15, 15, 3)
  }
}
]